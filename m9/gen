#!/usr/bin/env ruby
require 'awesome_print'
require 'fileutils'
require 'httparty'
require 'pry'

class AdventOfCodeClient
  include HTTParty
  base_uri 'adventofcode.com'

  def initialize(year=2023)
    @year = year
    @cookie_hash = HTTParty::CookieHash.new
    set_cookies

    @options = { headers: {'Cookie' => @cookie_hash.to_cookie_string }}
  end

  def get_task_input(day)
    self.class.get "/#{@year}/day/#{day}/input", @options
  end

  private

  def set_cookies
    @cookie_hash.add_cookies(ENV['AOC_COOKIE'])
  end
end

DIRNAME = ARGV.first
INPUT_FILE = "#{DIRNAME}/input.txt"
EXAMPLE_FILE = "#{DIRNAME}/example.txt"
SOLUTION_FILE = "#{DIRNAME}/solution#{DIRNAME}.rb"
TEMPLATE_FILE = "_template.rb"

abort "Error: Please provide a numeric argument"  if DIRNAME.nil?
abort "Error: Wrong argument '#{DIRNAME}', should be a number"  if DIRNAME.to_i.zero?
abort "Error: Directory '#{DIRNAME}' already exists."  if File.directory?(DIRNAME)

FileUtils.mkdir DIRNAME, mode: 0700 rescue abort 'Error: mkdir failed.'
FileUtils.touch [INPUT_FILE, EXAMPLE_FILE, SOLUTION_FILE] rescue abort 'Error: touch failed.'
FileUtils.chmod 0600, [INPUT_FILE, EXAMPLE_FILE] rescue abort 'Error: chmod failed.'
FileUtils.chmod 0700, SOLUTION_FILE rescue abort 'Error: chmod failed.'
FileUtils.cp TEMPLATE_FILE, SOLUTION_FILE rescue abort 'Error: cp failed.'

File.write INPUT_FILE, AdventOfCodeClient.new.get_task_input(DIRNAME) rescue abort 'Error: writing input file failed'




